public class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if (head == null || head.next == null || k == 0) {
            return head;
        }

        // Step 1: Compute the length of the list
        ListNode current = head;
        int length = 1;
        while (current.next != null) {
            current = current.next;
            length++;
        }

        // Step 2: Normalize `k` (handle cases where `k` >= length)
        k = k % length;
        if (k == 0) {
            return head;
        }

        // Step 3: Find the new tail (node at `length - k - 1`)
        ListNode newTail = head;
        for (int i = 0; i < length - k - 1; i++) {
            newTail = newTail.next;
        }

        // Step 4: Perform rotation
        ListNode newHead = newTail.next;
        newTail.next = null;
        current.next = head;

        return newHead;
    }
}
